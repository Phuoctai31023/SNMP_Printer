<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <title>Qu·∫£n l√Ω Ng∆∞·ªùi D√πng</title>

    <!-- Bootstrap & Icons -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      rel="stylesheet"
    />

    <!-- Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap"
      rel="stylesheet"
    />

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
      body {
        font-family: "Roboto", sans-serif;
        background-color: #f5f6fa;
      }
      .card-header {
        font-weight: 500;
      }
      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: none;
        justify-content: center;
        align-items: center;
      }
      th {
        cursor: pointer;
        user-select: none;
      }
      th i {
        margin-left: 5px;
        font-size: 0.9em;
      }
      th.active-sort {
        background-color: #ffc107 !important;
        color: #000 !important;
      }
      td.highlight {
        background-color: #fff3cd !important;
      }
    </style>
  </head>
  <body>
    <!-- Loading Overlay -->
    <div class="overlay" id="loadingOverlay">
      <div class="spinner-border text-primary spinner-border-lg" role="status">
        <span class="visually-hidden">ƒêang x·ª≠ l√Ω...</span>
      </div>
    </div>

    <div class="container mt-4">
      <!-- Header -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Xin ch√†o, <%= user.username %> üëã</h2>
        <div class="dropdown">
          <button
            class="btn btn-outline-dark dropdown-toggle"
            data-bs-toggle="dropdown"
          >
            <i class="bi bi-person-circle"></i> <%= user.username %> (<%=
            user.role %>)
          </button>
          <ul class="dropdown-menu dropdown-menu-end">
            <% if (user && user.role === 'admin') { %>
            <li>
              <a class="dropdown-item" href="/printers">
                <i class="bi bi-printer me-2"></i>Qu·∫£n l√Ω m√°y in
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="/departments">
                <i class="bi bi-building-gear me-2"></i> Qu·∫£n l√Ω b·ªô ph·∫≠n
              </a>
            </li>
            <% } %>
            <li>
              <a class="dropdown-item" href="/change-password">
                <i class="bi bi-key me-2"></i>ƒê·ªïi m·∫≠t kh·∫©u
              </a>
            </li>
            <li>
              <a class="dropdown-item text-danger" href="/logout">
                <i class="bi bi-box-arrow-right me-2"></i>ƒêƒÉng xu·∫•t
              </a>
            </li>
          </ul>
        </div>
      </div>

      <!-- Th·ªëng k√™ nhanh -->
      <div class="row mb-4">
        <div class="col-md-3">
          <div class="card shadow-sm border-0">
            <div class="card-body text-center">
              <h6 class="card-title text-muted">T·ªïng s·ªë t√†i kho·∫£n</h6>
              <h3><%= users.length %></h3>
            </div>
          </div>
        </div>

        <div class="col-md-3">
          <div class="card shadow-sm border-0">
            <div class="card-body text-center">
              <h6 class="card-title text-muted">Admin</h6>
              <h3 class="text-primary">
                <%= users.filter(u => u.role === 'admin').length %>
              </h3>
            </div>
          </div>
        </div>

        <div class="col-md-3">
          <div class="card shadow-sm border-0">
            <div class="card-body text-center">
              <h6 class="card-title text-muted">User</h6>
              <h3 class="text-success">
                <%= users.filter(u => u.role === 'user').length %>
              </h3>
            </div>
          </div>
        </div>

        <div class="col-md-3">
          <div class="card shadow-sm border-0">
            <div class="card-body text-center">
              <h6 class="card-title text-muted">ƒê√£ ch·∫∑n</h6>
              <h3 class="text-danger">
                <%= users.filter(u => u.isBlocked).length %>
              </h3>
            </div>
          </div>
        </div>
      </div>

      <!-- Form th√™m user -->
      <% if (user && user.role === 'admin') { %>
      <div class="d-flex justify-content-end mb-3">
        <button
          class="btn btn-success"
          data-bs-toggle="modal"
          data-bs-target="#addUserModal"
        >
          <i class="bi bi-person-plus-fill"></i> Th√™m Ng∆∞·ªùi D√πng
        </button>
      </div>
      <% } %>

      <!-- B·ªô l·ªçc & t√¨m ki·∫øm -->
      <div class="card-body p-2">
        <div class="row g-3 mb-3">
          <div class="col-md-4">
            <input
              type="text"
              id="searchInput"
              class="form-control"
              placeholder="üîç T√¨m ki·∫øm theo t√™n"
              onkeyup="filterTable()"
            />
          </div>
          <div class="col-md-3">
            <select
              id="departmentFilter"
              class="form-select"
              onchange="filterTable()"
            >
              <option value="">-- L·ªçc theo ph√≤ng ban --</option>
              <% departments.forEach(d => { %>
              <option value="<%= d.name.toLowerCase() %>"><%= d.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="col-md-3">
            <select
              id="roleFilter"
              class="form-select"
              onchange="filterTable()"
            >
              <option value="">-- L·ªçc theo quy·ªÅn --</option>
              <option value="admin">Admin</option>
              <option value="user">User</option>
            </select>
          </div>
          <div class="col-md-2">
            <select
              id="statusFilter"
              class="form-select"
              onchange="filterTable()"
            >
              <option value="">-- L·ªçc theo tr·∫°ng th√°i --</option>
              <option value="Ho·∫°t ƒë·ªông">Ho·∫°t ƒë·ªông</option>
              <option value="ƒê√£ ch·∫∑n">ƒê√£ ch·∫∑n</option>
            </select>
          </div>
        </div>
      </div>

      <!-- Ph√¢n trang -->
      <div class="d-flex justify-content-between align-items-center mb-2 px-2">
        <div>
          Hi·ªÉn th·ªã <span id="currentRange">0-0</span> /
          <span id="totalItems">0</span> ng∆∞·ªùi d√πng
        </div>
        <nav>
          <ul class="pagination pagination-sm mb-0" id="pagination"></ul>
        </nav>
      </div>

      <!-- B·∫£ng danh s√°ch user -->
      <div class="card shadow-sm">
        <div class="card-header bg-dark text-white">
          <i class="bi bi-list-ul"></i> Danh S√°ch Ng∆∞·ªùi D√πng
        </div>
        <div class="table-responsive">
          <table id="userTable" class="table table-hover align-middle mb-0">
            <thead class="table-dark">
              <tr>
                <th onclick="sortTable(0,this)">
                  T√™n ƒëƒÉng nh·∫≠p <i class="bi bi-arrow-down-up"></i>
                </th>
                <th>Email</th>
                <th>Ph√≤ng ban</th>
                <th onclick="sortTable(1,this)">
                  Quy·ªÅn <i class="bi bi-arrow-down-up"></i>
                </th>
                <th onclick="sortTable(2,this)">
                  Tr·∫°ng th√°i <i class="bi bi-arrow-down-up"></i>
                </th>
                <th onclick="sortTable(3,this)">
                  Ng√†y t·∫°o <i class="bi bi-arrow-down-up"></i>
                </th>
                <th onclick="sortTable(4,this)">
                  Ng√†y c·∫≠p nh·∫≠t <i class="bi bi-arrow-down-up"></i>
                </th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody id="userBody">
              <% if (users && users.length > 0) { users.forEach(u => { %>
              <tr>
                <td><%= u.username %></td>
                <td><%= u.email || '-' %></td>
                <td><%= u.department ? u.department.name : '-' %></td>
                <td>
                  <span
                    class="badge <%= u.role === 'admin' ? 'bg-primary' : 'bg-info' %>"
                    ><%= u.role %></span
                  >
                </td>
                <td>
                  <% if (u.isBlocked) { %>
                  <span class="badge bg-danger">ƒê√£ ch·∫∑n</span>
                  <% } else { %>
                  <span class="badge bg-success">Ho·∫°t ƒë·ªông</span>
                  <% } %>
                </td>
                <td><%= u.createdAtFormatted %></td>
                <td><%= u.updatedAtFormatted %></td>
                <td>
                  <% if (user && user.role === 'admin') { %>
                  <button
                    class="btn btn-warning btn-sm me-1"
                    onclick="openEditModalFromBtn(this)"
                    data-id="<%= u._id %>"
                    data-username="<%= u.username %>"
                    data-role="<%= u.role %>"
                    data-email="<%= u.email %>"
                    data-department="<%= u.department ? u.department._id : '' %>"
                  >
                    <i class="bi bi-pencil-square"></i>
                  </button>
                  <form
                    action="/users/delete/<%= u._id %>"
                    method="POST"
                    style="display: inline"
                  >
                    <button
                      type="submit"
                      class="btn btn-danger btn-sm"
                      onclick="return confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y?')"
                    >
                      <i class="bi bi-trash"></i>
                    </button>
                  </form>
                  <form
                    method="POST"
                    action="/users/toggle-block/<%= u._id %>"
                    class="d-inline ms-1"
                    onsubmit="return confirm('B·∫°n c√≥ ch·∫Øc mu·ªën <%= u.isBlocked ? 'm·ªü ch·∫∑n' : 'ch·∫∑n' %> ng∆∞·ªùi d√πng n√†y?');"
                  >
                    <button
                      class="btn <%= u.isBlocked ? 'btn-success' : 'btn-secondary' %> btn-sm"
                    >
                      <i
                        class="bi <%= u.isBlocked ? 'bi-unlock' : 'bi-slash-circle' %>"
                      ></i>
                    </button>
                  </form>
                  <% } else { %>
                  <span class="text-muted">-</span>
                  <% } %>
                </td>
              </tr>
              <% }) } else { %>
              <tr>
                <td colspan="8" class="text-center text-muted">
                  Kh√¥ng c√≥ ng∆∞·ªùi d√πng
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Modal th√™m user -->
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <form method="POST" action="/users/add">
          <div class="modal-content">
            <div class="modal-header bg-primary text-white">
              <h5 class="modal-title">
                <i class="bi bi-person-plus-fill"></i> Th√™m Ng∆∞·ªùi D√πng
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
              ></button>
            </div>
            <div class="modal-body row g-3">
              <div class="col-md-6">
                <label class="form-label">T√™n ƒëƒÉng nh·∫≠p</label>
                <input
                  name="username"
                  class="form-control"
                  placeholder="T√™n ƒëƒÉng nh·∫≠p"
                  required
                  pattern="^[a-z][a-z0-9._@]*$"
                  title="T√™n ƒëƒÉng nh·∫≠p ch·ªâ g·ªìm ch·ªØ th∆∞·ªùng, s·ªë, k√Ω t·ª± . _ @ v√† b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ c√°i"
                />
              </div>
              <div class="col-md-6">
                <label class="form-label">M·∫≠t kh·∫©u</label>
                <input
                  type="password"
                  name="password"
                  class="form-control"
                  placeholder="M·∫≠t kh·∫©u"
                  required
                />
              </div>
              <div class="col-md-6">
                <label class="form-label">Email</label>
                <input
                  type="email"
                  name="email"
                  class="form-control"
                  placeholder="Email"
                />
              </div>
              <div class="col-md-6">
                <label class="form-label">Ph√≤ng ban</label>
                <select name="department" class="form-select">
                  <option value="">-- Ch·ªçn ph√≤ng ban --</option>
                  <% departments.forEach(d => { %>
                  <option value="<%= d._id %>"><%= d.name %></option>
                  <% }) %>
                </select>
              </div>
              <div class="col-md-6">
                <label class="form-label">Quy·ªÅn</label>
                <select name="role" class="form-select">
                  <option value="user">User</option>
                  <option value="admin">Admin</option>
                </select>
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                ƒê√≥ng
              </button>
              <button type="submit" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Th√™m
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal s·ª≠a -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog">
        <form method="POST" id="editForm">
          <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
              <h5 class="modal-title">
                <i class="bi bi-pencil-square"></i> S·ª≠a ng∆∞·ªùi d√πng
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
              ></button>
            </div>
            <div class="modal-body">
              <input type="hidden" name="id" id="editId" />
              <div class="mb-3">
                <label class="form-label">T√™n ƒëƒÉng nh·∫≠p</label>
                <input
                  type="text"
                  class="form-control"
                  name="username"
                  id="editUsername"
                  required
                />
              </div>
              <div class="mb-3">
                <label class="form-label">Email</label>
                <input
                  type="email"
                  class="form-control"
                  name="email"
                  id="editEmail"
                />
              </div>
              <div class="mb-3">
                <label class="form-label">Ph√≤ng ban</label>
                <select
                  class="form-select"
                  name="department"
                  id="editDepartment"
                >
                  <option value="">-- Ch·ªçn ph√≤ng ban --</option>
                  <% departments.forEach(d => { %>
                  <option value="<%= d._id %>"><%= d.name %></option>
                  <% }) %>
                </select>
              </div>
              <div class="mb-3">
                <label class="form-label">Quy·ªÅn</label>
                <select class="form-select" name="role" id="editRole">
                  <option value="user">User</option>
                  <option value="admin">Admin</option>
                </select>
              </div>
              <div class="mb-3">
                <label class="form-label"
                  >M·∫≠t kh·∫©u (ƒë·ªÉ tr·ªëng n·∫øu kh√¥ng ƒë·ªïi)</label
                >
                <input type="password" class="form-control" name="password" />
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                ƒê√≥ng
              </button>
              <button type="submit" class="btn btn-warning">
                L∆∞u thay ƒë·ªïi
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Scripts -->
    <script>
      // Alert hi·ªÉn th·ªã l·ªói/th√†nh c√¥ng
      const params = new URLSearchParams(window.location.search);
      const error = params.get("error"),
        success = params.get("success");
      if (error) {
        Swal.fire({
          icon: "error",
          title: "L·ªói",
          text: decodeURIComponent(error),
          confirmButtonColor: "#d33",
        }).then(() =>
          window.history.replaceState(
            {},
            document.title,
            window.location.pathname
          )
        );
      }
      if (success) {
        Swal.fire({
          icon: "success",
          title: "Th√†nh c√¥ng",
          text: decodeURIComponent(success),
          confirmButtonColor: "#28a745",
        }).then(() =>
          window.history.replaceState(
            {},
            document.title,
            window.location.pathname
          )
        );
      }

      // Sort
      let sortDirections = {};
      function sortTable(colIndex, headerEl) {
        const table = document.getElementById("userTable");
        const tbody = table.querySelector("tbody");
        const rows = Array.from(tbody.querySelectorAll("tr")).filter((r) =>
          r.querySelector("td")
        );
        sortDirections[colIndex] = !sortDirections[colIndex];
        rows.sort((a, b) => {
          let cellA = a.children[colIndex].innerText.trim();
          let cellB = b.children[colIndex].innerText.trim();
          return sortDirections[colIndex]
            ? cellA.localeCompare(cellB, "vi", { sensitivity: "base" })
            : cellB.localeCompare(cellA, "vi", { sensitivity: "base" });
        });
        tbody.innerHTML = "";
        rows.forEach((r) => tbody.appendChild(r));

        document
          .querySelectorAll("th")
          .forEach((th) => th.classList.remove("active-sort"));
        document
          .querySelectorAll("td")
          .forEach((td) => td.classList.remove("highlight"));
        document
          .querySelectorAll("th i")
          .forEach((icon) => (icon.className = "bi bi-arrow-down-up"));

        const icon = headerEl.querySelector("i");
        icon.className = sortDirections[colIndex]
          ? "bi bi-arrow-up"
          : "bi bi-arrow-down";
        headerEl.classList.add("active-sort");

        tbody.querySelectorAll("tr").forEach((row) => {
          row.children[colIndex] &&
            row.children[colIndex].classList.add("highlight");
        });
      }

      // Filter + ph√¢n trang
      let originalRows = [];
      let currentPage = 1;
      let rowsPerPage = 10;

      window.onload = function () {
        originalRows = Array.from(document.querySelectorAll("#userBody tr"));
        filterTable();
      };

      function filterTable() {
        const search = document
          .getElementById("searchInput")
          .value.toLowerCase();
        const role = document.getElementById("roleFilter").value.toLowerCase();
        const status = document
          .getElementById("statusFilter")
          .value.toLowerCase();
        const dept = document
          .getElementById("departmentFilter")
          .value.toLowerCase();

        let filtered = originalRows.filter((row) => {
          const cells = row.querySelectorAll("td");
          if (!cells.length) return false;
          const username = cells[0].innerText.toLowerCase();
          const email = cells[1].innerText.toLowerCase();
          const department = cells[2].innerText.toLowerCase();
          const roleText = cells[3].innerText.toLowerCase();
          const statusText = cells[4].innerText.toLowerCase();

          return (
            (!search || username.includes(search) || email.includes(search)) &&
            (!role || roleText.includes(role)) &&
            (!status || statusText.includes(status)) &&
            (!dept || department.includes(dept))
          );
        });

        paginate(filtered);
      }

      function paginate(rows) {
        const tbody = document.getElementById("userBody");
        tbody.innerHTML = "";

        const totalItems = rows.length;
        const totalPages = Math.ceil(totalItems / rowsPerPage) || 1;

        if (currentPage > totalPages) currentPage = totalPages;
        const start = (currentPage - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        const visibleRows = rows.slice(start, end);

        visibleRows.forEach((r) => tbody.appendChild(r));

        document.getElementById("totalItems").innerText = totalItems;
        document.getElementById("currentRange").innerText =
          totalItems > 0 ? `${start + 1}-${Math.min(end, totalItems)}` : "0-0";

        const pagination = document.getElementById("pagination");
        pagination.innerHTML = "";
        for (let i = 1; i <= totalPages; i++) {
          const li = document.createElement("li");
          li.className = `page-item ${i === currentPage ? "active" : ""}`;
          li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
          li.addEventListener("click", (e) => {
            e.preventDefault();
            currentPage = i;
            paginate(rows);
          });
          pagination.appendChild(li);
        }
      }
      // M·ªü modal edit
      function openEditModalFromBtn(btn) {
        const { id, username, role, email, department } = btn.dataset;

        // G√°n gi√° tr·ªã v√†o form
        document.getElementById("editId").value = id || "";
        document.getElementById("editUsername").value = username || "";
        document.getElementById("editEmail").value = email || "";
        document.getElementById("editRole").value = role || "";
        document.getElementById("editDepartment").value = department || "";

        // üöÄ ƒê·ªïi t·ª´ /users/edit/ sang /users/update/
        document.getElementById("editForm").action = `/users/update/${id}`;

        // Hi·ªÉn th·ªã modal
        const modalEl = document.getElementById("editModal");
        const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
        modal.show();
      }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
